# 
# Do NOT Edit the Auto-generated Part!
# Generated by: spectacle version 0.32
# 

Name:       aria2

# >> macros
# << macros

Summary:    A utility for downloading files
Version:    1.36.0
Release:    0
Group:      Applications/Internet
License:    GPLv2
URL:        https://aria2.github.io
Source0:    %{name}-%{version}.tar.bz2
Source100:  aria2.yaml
Requires(post): /sbin/ldconfig
Requires(postun): /sbin/ldconfig
BuildRequires:  pkgconfig(sqlite3)
BuildRequires:  pkgconfig(expat)
BuildRequires:  pkgconfig(libssl)
BuildRequires:  pkgconfig(libxml-2.0)
BuildRequires:  pkgconfig(zlib)
BuildRequires:  autoconf
BuildRequires:  automake
BuildRequires:  libtool
BuildRequires:  gettext-devel
BuildRequires:  openssh
BuildRequires:  ( pkgconfig(libgpg-error) or pkgconfig(gpg-error) )

%description

aria2 is a utility for downloading files. The supported protocols are
HTTP(S), FTP, SFTP, BitTorrent, and Metalink.

aria2 can download a file from multiple sources/protocols and tries to
utilize your maximum download bandwidth. It supports downloading a file
from HTTP(S)/FTP/SFTP and BitTorrent at the same time, while the data
downloaded from HTTP(S)/FTP/SFTP is uploaded to the BitTorrent swarm. Using
Metalink's chunk checksums, aria2 automatically validates chunks of data
while downloading a file like BitTorrent.

%if "%{?vendor}" == "chum"
PackageName: Aria2
Type: console-application
PackagerName: nephros
Categories:
 - Internet
 - Utility
Custom:
  Repo: https://github.com/aria2/aria2
  PackagingRepo: https://github.com/sailfishos-chum/aria2.git
Url:
  Homepage: https://aria2.github.io
  Help: https://aria2.github.io/manual/en/html/index.html
%endif


%package doc
Summary:    Files for %{name}
Group:      Development/Libraries
Requires:   %{name} = %{version}-%{release}

%description doc
Files for %{name}.

%package devel
Summary:    Development files for %{name}
Group:      Development/Libraries
Requires:   %{name} = %{version}-%{release}

%description devel
Development files for %{name}.

%prep
%setup -q -n %{name}-%{version}/upstream

# >> setup
# << setup

%build
# >> build pre
# << build pre

%reconfigure --disable-static \
    --enable-libaria2 \
    --disable-nls \
    --with-pic \
    --with-bashcompletiondir=%{_datadir}/bash-completion/completions \
    --without-gnutls --with-openssl

make %{?_smp_mflags}

# >> build post
# << build post

%install
rm -rf %{buildroot}
# >> install pre
# << install pre
%make_install

# >> install post
# << install post

%post -p /sbin/ldconfig

%postun -p /sbin/ldconfig

%files
%defattr(-,root,root,-)
# >> files
%{_bindir}/*
%{_libdir}/*.so.*
%{_datadir}/bash-completion/completions/*
# << files

%files doc
%defattr(-,root,root,-)
# >> files doc
%{_docdir}/*
%{_mandir}/*/*
# << files doc

%files devel
%defattr(-,root,root,-)
# >> files devel
%{_includedir}/*
%{_libdir}/*.so
%{_libdir}/pkgconfig/*.pc
# << files devel
